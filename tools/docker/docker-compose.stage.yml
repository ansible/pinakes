version: '3.9'

x-environment:
  &catalog-env
  - PINAKES_CONTROLLER_TOKEN=${PINAKES_CONTROLLER_TOKEN}
  - PINAKES_CONTROLLER_URL=${PINAKES_CONTROLLER_URL:-https://10.0.153.78}
  - PINAKES_KEYCLOAK_REALM_FRONTEND_URL=${PINAKES_KEYCLOAK_REALM_FRONTEND_URL:-https://localhost:9443/auth}
  - PINAKES_KEYCLOAK_VERIFY_SSL=false
  - PINAKES_HTTPS_ENABLED=True
  - PINAKES_CSRF_TRUSTED_ORIGINS=${PINAKES_CSRF_TRUSTED_ORIGINS:-https://*,http://*}
  - PINAKES_STATIC_ROOT=/opt/app-root/src/staticfiles
  - PINAKES_CONTROLLER_VERIFY_SSL=False
  - PINAKES_MEDIA_ROOT=/opt/app-root/src/media
  - PINAKES_ALLOWED_HOSTS=*
  - PINAKES_DEBUG=False
  - PINAKES_SECRET_KEY=django-insecure-k8^atj4p3jj^zkb3=o(rhaysjzy_mr&#h(yl+ytj#f%@+er4&5
  - PINAKES_KEYCLOAK_USER=admin
  - PINAKES_KEYCLOAK_PASSWORD=admin
  - PINAKES_KEYCLOAK_URL=https://keycloak-app:8443/auth
  - PINAKES_KEYCLOAK_CLIENT_SECRET=${PINAKES_KEYCLOAK_CLIENT_SECRET:-SOMESECRETVALUE}
  - REDIRECT_URIS_STR=http://app:8000,http://app:8000/*,*
  - PINAKES_REDIS_HOST=redis
  - PINAKES_POSTGRES_HOST=postgres
  - PINAKES_POSTGRES_USER=admin
  - PINAKES_POSTGRES_PASSWORD=admin

services:
  frontend:
    image: pinakes-ui:dev
    build:
      context: frontend/
    ports:
      - "${FRONTEND_HTTP_PORT:-9080}:9080"
      - "${FRONTEND_HTTPS_PORT:-8443}:8443"
    volumes:
      - 'media_files:/opt/app-root/src/media'
      - 'static_files:/opt/app-root/src/staticfiles'
      - '${FRONTEND_CONF_PATH:-./frontend/nginx.conf}:/opt/app-root/etc/nginx.d/nginx.conf:z'
    depends_on:
      - app

  app:
    environment: *catalog-env
    image: pinakes:dev
    build:
      context: ../../
      dockerfile: tools/docker/Dockerfile
    restart: always
    ports:
      - '8000:8000'
    volumes:
      - 'media_files:/opt/app-root/src/media'
      - 'static_files:/opt/app-root/src/staticfiles'
    depends_on:
      - keycloak-setup
      - postgres
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:8000/api/pinakes/v1/"
        ]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s

  keycloak-setup:
    image: pinakes:dev
    environment: *catalog-env
    depends_on:
      - keycloak-app
    command: /opt/app-root/src/tools/docker/scripts/keycloak-setup.sh

  worker:
    image: pinakes:dev
    restart: always
    environment: *catalog-env
    volumes:
      - 'media_files:/opt/app-root/src/media'
    depends_on:
      - app
      - redis
      - keycloak-setup
    command: /opt/app-root/src/tools/docker/scripts/worker.sh

  scheduler:
    image: pinakes:dev
    restart: always
    environment: *catalog-env
    depends_on:
      - app
      - redis
      - keycloak-setup
    command: "python manage.py cronjobs"

  keycloak-app:
    image: 'quay.io/keycloak/keycloak:15.0.2'
    ports:
      - '8080:8080'
      - '9443:8443'
    depends_on:
      - 'postgres'
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=admin
      - DB_PASSWORD=admin
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
    volumes:
      - ./frontend/certs/wildcard.crt:/etc/x509/https/tls.crt:z
      - ./frontend/certs/wildcard.key:/etc/x509/https/tls.key:z
  postgres:
    image: 'docker.io/postgres:13-alpine'
    volumes:
      - 'pg_data:/var/lib/postgresql/data'
      - "../docker/initdb:/docker-entrypoint-initdb.d:z"
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_MULTIPLE_DATABASES=keycloak,catalog

  redis:
    image: "docker.io/redis:alpine"

volumes:
  pg_data: {}
  media_files: {}
  static_files: {}
